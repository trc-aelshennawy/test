name: 'Terraform Apply'
permissions:
  id-token: write # Required to fetch the JWT OIDC Token
  contents: read # Actions/checkout
  issues: write
  pull-requests: write
on:
  workflow_dispatch:

jobs:
  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: 'Set working directory'
        id: set_working_dir
        run: |
          if [ -d "aws-envs" ]; then
            echo "WORKING_DIR=aws-envs" >> $GITHUB_ENV
          elif [ -d "aws_envs" ]; then
            echo "WORKING_DIR=aws_envs" >> $GITHUB_ENV
          else
            echo "Error: Directories 'aws-envs's || 'aws_envs' don't exist."
            exit 1
          fi
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: 'sts.amazonaws.com'
          aws-region: eu-central-1 #TODO: Always eu-central? Put in secrets? testen
          role-to-assume: arn:aws:iam::870615114862:role/github_actions_role #TODO: Dynamic Account ID? -> Secrets arn:aws:iam::XX$XXX{{ secrets.AWS_ACCOUNT_ID }}:role/github_actions_role
      - name: Terraform init
        run: terraform init -no-color #-no-color to remove ASCI codes from Terraform output (don't work in github issues/comments)
        working-directory: ${{ env.WORKING_DIR }}
      - name: Terraform validate
        run: terraform validate -no-color
        working-directory: ${{ env.WORKING_DIR }}
      - name: Terraform plan
        run: terraform plan -no-color
        working-directory: ${{ env.WORKING_DIR }}
      - uses: actions/github-script@v7 # Comment on Pull Request
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            #### Terraform Apply üìñ\`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`\n
            ${{ steps.apply.outputs.stdout }}
            \`\`\`
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Downlaod TF Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ${{env.WORKING_DIR}}
      - name: Terraform apply
        id: apply
        run: terraform apply tfplan --auto-approve -no-color
        working-directory: ${{ env.WORKING_DIR }}
